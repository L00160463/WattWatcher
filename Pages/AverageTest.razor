@page "/AverageTest"
@using WattWatcher.Data
@inject AverageService AverageService

<h1>Average Daily Consumption Metrics</h1>

@if (dailyAverages == null)
{
    <p><em>Loading...</em></p>
}
else if (!dailyAverages.Any())
{
    <p><em>No data available.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Avg Watts (Circuit 1)</th>
                <th>Avg Watts (Circuit 2)</th>
                <th>Avg Amps (Circuit 1)</th>
                <th>Avg Amps (Circuit 2)</th>
                <th>Avg kWh (Circuit 1)</th>
                <th>Avg kWh (Circuit 2)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in dailyAverages)
            {
                <tr>
                    <td>@entry.Key.ToString("dddd, MM/dd/yyyy")</td>
                    <td>@entry.Value.AvgWattsCircuit1.ToString("N2") W</td>
                    <td>@entry.Value.AvgWattsCircuit2.ToString("N2") W</td>
                    <td>@entry.Value.AvgAmpsCircuit1.ToString("N2") A</td>
                    <td>@entry.Value.AvgAmpsCircuit2.ToString("N2") A</td>
                    <td>@entry.Value.AvgKwhCircuit1.ToString("N2") kWh</td>
                    <td>@entry.Value.AvgKwhCircuit2.ToString("N2") kWh</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Dictionary<DateTime, (double AvgWattsCircuit1, double AvgWattsCircuit2, double AvgAmpsCircuit1, double AvgAmpsCircuit2, double AvgKwhCircuit1, double AvgKwhCircuit2)> dailyAverages;

    protected override async Task OnInitializedAsync()
    {
        dailyAverages = await AverageService.GetDailyAveragesAsync();
    }
}
