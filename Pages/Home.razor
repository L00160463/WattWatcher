@page "/Home"
@using WattWatcher.Data
@inject ElectricService ElectricService


<ApexChart TItem="MyData"
           Title="Electricity Consumption" Options="options">

    <ApexPointSeries TItem="MyData"
                     Items="Data"
                     SeriesType="SeriesType.Donut"
                     Name="Gross Value"
                     XValue="@(e => e.Category)"
                     YAggregate="@(e => e.Sum(e => e.Revenue))"
                     OrderByDescending="e=>e.Y" />
</ApexChart>


@*         <!-- Month Carousel -->
<div class="container mt-4 mb-5">
    <div class="d-flex flex-row flex-nowrap overflow-auto" role="group" aria-label="Month Carousel">
        @foreach (var month in months)
        {
            <button type="button" class="btn btn-outline-secondary m-1 btn-month" @onclick="() => SetCurrentMonth(month)">
                @month
            </button>
        }
    </div>
</div> *@


<div class="card" >

    <div class="card-body">

        <!-- Display Electric Data for Circuit 1 and Circuit 2 -->
        @if (Circuit1Data != null)
        {
            <div class="card mb-3">
                <div class="card-header bg-primary text-white">
                    Kitchen Circuit
                </div>
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                       @*  <p class="card-text mb-0">Amperage: @Circuit1Data.Amps A</p>
                        <p class="card-text mb-0">Wattage: @Circuit1Data.Watts W</p>
                        <p class="card-text mb-0">Kwh: @Circuit1Data.Kwh kWh</p> *@

                        <p class="card-text mb-0">November 2023</p>
                        <p class="card-text mb-0">Paid Out</p>
                        <p class="card-text mb-0">€64.46</p>
                    </div>
                    <a href="/ViewMore/Circuit1" class="btn btn-primary">View More</a>
                </div>
            </div>
        }

        @if (Circuit2Data != null)
        {
            <div class="card mb-3">
                <div class="card-header bg-primary text-white">
                    Main Circuit
                </div>
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <p class="card-text mb-0">December 2023</p>
                        <p class="card-text mb-0">Paid Out</p>
                        <p class="card-text mb-0">€23.75</p>
                    </div>
                    <a href="/ViewMore/Circuit2" class="btn btn-primary">View More</a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    public ElectricModel Circuit1Data;
    public ElectricModel Circuit2Data;
    private List<MyData> Data { get; set; } = new List<MyData>();
    private ApexChartOptions<MyData> options { get; set; } = new();

    protected override void OnInitialized()
    {
        ElectricService.OnDataUpdated += UpdateData;
        InitializeChartData();

        //Chart Data 
        options.PlotOptions = new PlotOptions
            {
                Pie = new PlotOptionsPie
                {
                    Donut = new PlotOptionsDonut
                    {
                        Labels = new DonutLabels
                        {
                            Total = new DonutLabelTotal { FontSize = "24px", Color = "#D807B8", Formatter = @"function (w) {return w.globals.seriesTotals.reduce((a, b) => { return (a + b) }, 0)}" }
                        }
                    }
                }
            };
    }

   

    private void UpdateData(int circuitId, ElectricModel newData)
    {
        InvokeAsync(() =>
        {
            if (circuitId == 1)
            {
                Circuit1Data = newData;
            }
            else if (circuitId == 2)
            {
                Circuit2Data = newData;
            }
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        ElectricService.OnDataUpdated -= UpdateData;
    }

    


    //CAROUSEL MONTHS
    private readonly List<string> months = new List<string>
    {
        "Jan", "Feb", "Mar", "Apr", "May", "Jun",
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
    };
    private string currentMonth = "Jan";

    private void SetCurrentMonth(string month)
    {
        currentMonth = month;
        // Add logic here to filter data or perform actions based on the selected month
        StateHasChanged();
    }



    //CHART DATA 

    private void InitializeChartData()
    {
        Data.AddRange(new List<MyData>
        {
            new MyData { Category = "Kitchen", NetProfit = 12, Revenue = 33 },
            new MyData { Category = "Heating", NetProfit = 43, Revenue = 42 },
            new MyData { Category = "Utility", NetProfit = 112, Revenue = 23 }
        });
    }

    public class MyData
    {
        public string Category { get; set; }
        public int NetProfit { get; set; }
        public int Revenue { get; set; }
    }   
}
